Теория

1.	Переменные. Типы данных

2.	Операторы

3.	Операторы ветвления

4.	Циклы

5.	Строки

6.	Ввод/Вывод

7.	Типы данных bytes, bytearray

8.	Регулярные выражения

9.	Списки

10.	Генератор списков.

11.	Функции map, zip, filter, reduce

12.	Кортежи, 

13.	Множества

14.	Диапазоны

15.	Словари

16.	Функции

17.	Необязательные параметры, сопоставление по ключам (функции)

18.	Передача значений из кортежа, списка, словаря (функции)

19.	Рекурсивные функции

20.	Глобальные и локальные переменные

21.	Определение класса и создание экземпляра класса

22.	Конструктор и деструктор

23.	Наследование

24.	Перегрузка операторов

25.	Статические методы и методы класса



Практика

1.	Вывести на экран «Hello World»

2.	Прочитать из файла матрицу 3 ранга, вычислить определитель, результат записать в файл.

3.	Прочитать из файла матрицу 3 ранга, траспорировать, результат записать в файл.

4.	Прочитать из файла текст, разделить текст на слова, записать слова в файл в порядке возрастания

5.	Разработать класс «коробка» , определить методы нахождения объема и площади поверхности

6.	Задание №1. Объявите функцию, которая принимает три стороны треугольника ипроверяет, можно ли из переданных аргументов составить треугольник. Если проверка проходит, вернуть значение True, иначе - значение False. Вызовите функцию и выведите на экран ДА, если функция возвратит True и НЕТ, если возвращается значение False. Задание № 2. Вводится целое положительное число N. Необходимо написатьрекурсивную функцию, которая отображает на экране последовательность целыхчисел от 1 до N (включительно). Каждое число выводится с новой строки.

7.	Задание №1. Объявите функцию для проверки числа на четность (возвращается True, если переданное число четное и False, если число нечетное). После объявления функции в цикле необходимо считывать целое числовое значение (функцией input), пока не поступит число 1. Если введенное значениечетное (проверяется с помощью заданной функции), то оно выводится на экран. Задание №2. Вводится список целых чисел в одну строчку через пробел. Необходимо вычислить сумму введенных значений, используя рекурсивнуюфункцию (для перебора элементов списка). Функция должна возвращать значениесуммы. (Выводить на экран она ничего не должна). Вызвать рекурсивную функцию для введенного с клавиатуры списка и отобразитьзначение вычисленной суммы на экране.

8.	Задание №1. Объявите функцию для проверки числа на нечетность (возвращаетсяTrue, если переданное число нечетное и False, если число четное). После объявления функции прочитайте (с помощью функции input) список целыхзначений, записанных в одну строку через пробел. И, используя генераторсписков и объявленную функцию, сформируйте список из нечетных значений наоснове введенного исходного списка. Результат отобразите на экране. Задание № 2. Вводится натуральное число n. Необходимо с помощьюрекурсивной функции сформировать последовательность чисел Фибоначчи поправилу: первые два числа равны 1 и 1, а каждое следующее значение равносумме двух предыдущих. Пример такой последовательности для первых 7 чисел: 1, 1, 2, 3, 5, 8, 13, ... Функция должна возвращать список сформированнойпоследовательности длиной n. Вызовите эту функцию и отобразите на экране полученный список.

9.	Задание №1. Вводится слово. Если это слово RECT, то следует объявитьфункцию с именем get_sq, двумя параметрами, вычисляющую площадьпрямоугольника и возвращающую вычисленное значение. Если же введенноеслово не RECT (любое другое), то объявляется функция с тем же именем get_sq, сдвумя параметрами для вычисления периметра прямоугольника. Вычисленное значение возвращается функцией. В конце программы вызовите функцию с двумя аргументами и выведитерезультат на экран. Задание № 2. Вводится натуральное число n. Необходимо с помощьюрекурсивной функции вычислить факториал числа n. Напомню, что факториалчисла, равен: n! = 1 * 2 * 3 *...* n. Функция должна возвращать вычисленноезначение. Вызовите эту функцию и отобразите на экране результат ее работы.

10.	Задание №1. Объявите функцию, которая принимает строку (в качествеаргумента) и возвращает False, если длина строки меньше трех символов. Иначевозвращается значение True. После объявления функции прочитайте (с помощью функции input) списокназваний городов, записанных в одну строку через пробел. Затем, используягенератор списка и созданную функцию, сформируйте список из названийгородов длиной не менее трех символов на основе введенного исходного списка. Результат отобразите на экране. Задание № 2. Имеется следующий многомерный список: d = [1, 2, [True, False], ["Москва", "Уфа", [100, 101], [True, [1, -1]]], 7.89] С помощью рекурсивной функции создать на его основе одномерный список из значений элементов списка d. Функция должна возвращать новый созданныйодномерный список. Вызовите эту функцию и отобразите на экране результат ее работы.

11.	Задание №1. Объявите функцию, которая принимает строку (в качествеаргумента) и возвращает два значения в виде кортежа: переданная строка и еедлина. После объявления функции прочитайте (с помощью функции input) списокназваний городов, записанных в одну строку через пробел. Затем, используягенератор словарей и созданную функцию, сформируйте словарь d в формате: d = {: , ..., : } Задание № 2. Объявите анонимную (лямбда) функцию для вычисления модулячисла (то есть, отрицательные числа нужно делать положительными). Вызовите эту функцию для введенного с клавиатуры вещественного числа иотобразите результат на экране.

12.	Задание №1. Вводится список целых чисел в одну строчку через пробел. Необходимо задать функцию с именем get_sq, которая принимает два аргумента(максимальное и минимальное значения из списка) и возвращает ихпроизведение. Вызовите эту функцию и отобразите на экране полученноечисловое значение. Подсказка: для передачи аргументов функции используйте функции max и minдля введенного списка чисел. Задание № 2. Объявите обычную функцию, которая первым параметромпринимает список, а вторым – ссылку на функцию. Она должна возвращать отфильтрованный список. Делается это по следующему алгоритму. В циклепереберите элементы списка, для каждого вызовите, переданную вторымпараметром, функцию и если она возвращает True, то элемент должен бытьдобавлен в возвращаемый основной функцией список. Вызовите объявленную функцию, первым параметром передайте список, авторым запишите лямбда-функцию для отбора элементов из передаваемогосписка. Результат работы функции выведите на экран.

13.	Задание №1. Напишите функцию, которая проверяет корректность переданногоей email-адреса в виде строки. Будем полагать, что адрес верен, если онобязательно содержит символы '@' и '.', а все остальные символы могутпринимать значения: 'a-z', 'A-Z', '0-9' и '_'. Если email верен, то функциявозвращает True, иначе – False. После объявления функции прочитайте (с помощью функции input) строку сemail-адресом и вызовите функцию с этим аргументом. Результат отобразите наэкране. Задание № 2. Объявите анонимную (лямбда) функцию для определениявхождения в строку фрагмента "ra". То есть, функция должна возвращать True, если такой фрагмент присутствует в строке и False – в противном случае. Вызовите эту функцию для введенной строки и отобразите результат ее работы наэкране.

14.	Задание №1. Объявите функцию, которая принимает список, находитмаксимальное, минимальное и сумму значений этого списка и возвращает всевычисленные результаты в виде кортежа. Вызовите объявленную функцию со списком чисел, введенными с клавиатуры иотобразите результат работы функции на экране. Задание № 2. С помощью рекурсивной функции найдите минимальное значениеэлементов, переданного ей кортежа. Функция должна возвращать найденноеминимальное значение. Вызовите эту функцию и отобразите результат ее работы на экране.

15.	Задание №1. Запишите функцию без параметров, которая считывает склавиатуры фамилию, имя и отчество, записанные в одну строку через пробел, ивозвращает три строки: фамилия, имя, отчество (в виде кортежа). Вызовите объявленную функцию и отобразите на экране строку в формате: «Уважаемый, Имя Фамилия! Вы верно выполнили данную работу!» Задание №2. С помощью рекурсивной функции сформируйте список из отфильтрованных значений переданного ей кортежа. Фильтрацию определить спомощью анонимной функции, которая передается рекурсивной функции вторымаргументом (первым аргументом передается кортеж). Вызовите эту функцию и отобразите результат ее работы на экране.

16.	Задание №1. Используя замыкания функций, определите вложенную функцию, которая бы увеличивала значение переданного параметра на 5 и возвращала бывычисленный результат. Вызовите внешнюю функцию для получения ссылки на внутреннюю функцию иприсвойте ее переменной с именем cnt. Затем, вызовите внутреннюю функциючерез переменную cnt со значением k, введенным с клавиатуры. Задание № 2. Объявите функцию с именем get_sq, которая вычисляет площадьпрямоугольника по двум параметрам: width и height – ширина и высотапрямоугольника и возвращает результат. Определите декоратор для этой функции с именем (внешней функции) func_show, который отображает результат на экране в виде строки (без кавычек): "Площадь прямоугольника: " Вызовите декорированную функцию get_sq.

17.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая заключает строку s (s – строка, параметр внутренней функции) в произвольный тег, содержащийся в переменной tag – параметре внешнейфункции. Далее, на вход программы поступает две строки: первая с тегом, вторая снекоторым содержимым. Вторую строку нужно поместить в тег из первой строкис помощью реализованного замыкания. Результат выведите на экран. Задание №2. На вход программы поступает строка из целых чисел, записанныхчерез пробел. Напишите функцию get_list, которая преобразовывает эту строку всписок из целых чисел и возвращает его. Определите декоратор для этой функции, который сортирует список чисел, полученный из вызываемой в нем функции. Результат сортировки долженвозвращаться при вызове декоратора. Вызовите декорированную функцию get_list и отобразите полученныйотсортированный список на экране.

18.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая преобразует строку из списка целых чисел, записанных через пробел, либо в список, либо в кортеж. Тип коллекции определяется параметром typeвнешней функции. Если type = 'list', то используется список, иначе – кортеж. Далее, на вход программы поступает две строки: первая – это значение дляпараметра type; вторая – список целых чисел, записанных через пробел. Спомощью реализованного замыкания преобразовать эту строку всоответствующую коллекцию. Результат работы замыкания выведите на экран. Задание № 2. Вводятся два списка (каждый с новой строки) из слов, записанныхчерез пробел. Имеется функция, которая преобразовывает эти две строки в двасписка слов и возвращает эти списки. Определите декоратор для этой функции, который из этих двух списковформирует словарь, в котором ключами являются слова из первого списка, азначениями – соответствующие элементы из второго списка. Полученный словарьдолжен возвращаться при вызове декоратора. Примените декоратор к первой функции и вызовите ее. Результат (словарь) отобразите на экране.

19.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая принимает в качестве параметров фамилию и имя, а затем, заносит вшаблон эти данные. Сам шаблон – это строка, которая передается внешнейфункции и, например, может иметь такой вид: «Уважаемый %F%, %N%! Вы делаете работу по замыканиям функций.» Здесь %F% - это фрагмент куда нужно подставить фамилию, а %N% - фрагмент, куда нужно подставить имя. (Шаблон может быть и другим, вы это определяетесами). Здесь важно, чтобы внутренняя функция умела подставлять данные вшаблон, формировать новую строку и возвращать результат. Вызовите внутреннюю функцию замыкания и отобразите на экране результат ееработы. Задание № 2. Вводится строка целых чисел через пробел. Напишите функцию, которая преобразовывает эту строку в список чисел и возвращает их сумму. Определите декоратор для этой функции, который имеет один параметр start –начальное значение суммы. Примените декоратор со значением start=5 к функции и вызовите декорированную функцию. Результат отобразите на экране.

20.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая бы все повторяющиеся символы заменяла одним другим указаннымсимволов. Какие повторяющиеся символы искать и на что заменять, определяются параметрами внешней функции. Внутренней функции передаетсятолько строка для преобразования. Преобразованная (сформированная) строкадолжна возвращаться внутренней функцией. Вызовите внутреннюю функцию замыкания и отобразите на экране результат ееработы. Задание № 2. Объявите функцию, которая возвращает переданную ей строку внижнем регистре (с малыми буквами). Определите декоратор для этой функции, который имеет один параметр tag, определяющий строку с названием тега (начальное значение параметра tag равно"h1"). Этот декоратор должен заключать возвращенную функцией строку в тег tagи возвращать результат. Пример заключения строки "python" в тег h1: <h1>python</h1> Примените декоратор со значением tag="div" к функции и вызовитедекорированную функцию. Результат отобразите на экране

21.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая на основе двух параметров вычисляет площадь фигуры. Какой именнофигуры: треугольника или прямоугольника, определяется параметром typeвнешней функции. Если type принимает значение 0, то вычисляется площадьтреугольника, а иначе – прямоугольника. По умолчанию параметр type долженбыть равен 0. Вычисленное значение должно возвращаться внутренней функцией. Вызовите внутреннюю функцию замыкания и отобразите на экране результат ееработы. Задание № 2. Объявите функцию, которая вычисляет периметр многоугольника ивозвращает вычисленное значение. Длины сторон многоугольника передаются ввиде коллекции (списка или кортежа). Определите декоратор для этой функции, который выводит на экран сообщение: «Периметр фигуры равен = » Примените декоратор к функции и вызовите декорированную функцию.

22.	Задание №1. Используя замыкания функций, объявите внутреннюю функцию, которая принимает два параметра a, b, а затем, возвращает строку в формате: «Для значений a, b функция f(a,b) = » где число – это вычисленное значение функции f. Ссылка на f передается какаргумент внешней функции. Вызовите внутреннюю функцию замыкания и отобразите на экране результат ееработы. Функцию f придумайте самостоятельно (она должна что то делать сдвумя параметрами a, b и возвращать результат). Задание № 2. Объявите функцию, которая вычисляет площадь круга ивозвращает вычисленное значение. В качестве аргумента ей передается значениерадиуса. Определите декоратор для этой функции, который выводит на экран сообщение: «Площадь круга равна = » В строке выведите числовое значение с точностью до сотых. Применитедекоратор к функции и вызовите декорированную функцию.

23.	Задание №1. Импортируйте в программу стандартный модуль time и, используяодноименную функцию time из этого модуля, определите время работыпрограммы, которая сначала сохраняет в файл с именем out.txt строку: «Работа №3. Импорт модулей и пакетов. Работа с файлами» а, затем, читает из этого файла его содержимое и отображает результат (чтения из файла) на экран. Также на экран нужно вывести время работы программы.

24.	Задание №1. Импортируйте в программу стандартный модуль math и, используяфункцию log2, вычислите логарифм по основанию 2 для целых чисел от 1 до 10. Результат представьте в виде списка, который сформируйте с помощьюгенератора списков. Полученный список сохраните в файл в бинарном режиме доступа. А, затем, прочитайте его содержимое в другой список. Выведите на экран прочитанные данные (список).

25.	Задание №1. Импортируйте в программу стандартный модуль randomи, используя функцию randint, сгенерируйте 100 случайных чисел в диапазоне [-2; 5]. Все эти числа следует представить в виде списка, сформированного спомощью генератора списков. Сохраните полученные данные в файл в текстовом режиме доступа. Затем, прочитайте из него данные и поместите в другой список. Выведите на экранполученный список.

26.	Задание №1. Импортируйте в программу стандартный модуль math и, используяфункцию log10, вычислите логарифм по основанию 10 для целых чисел от 1 до10. Результат представьте в виде множества, который сформируйте с помощьюгенератора множеств. Полученный список сохраните в файл в текстовом режиме доступа в виде строкивещественных чисел с точностью до тысячных, записанных через пробел. Затем, прочитайте содержимое этого файла и поместите в другое множество. Выведитена экран прочитанные данные (множество).

27.	Задание №1. Импортируйте в программу стандартный модуль randomи, используя одноименную функцию random, сгенерируйте 100 случайных чисел. Все эти числа следует представить в виде списка, сформированного с помощьюгенератора списков. Сохраните полученные данные в файл в бинарном режиме доступа. Затем, прочитайте из него данные и поместите в другой список. Выведите на экран

28.	Задание №1. Импортируйте в программу стандартный модуль math и, используяфункцию factorial, вычислите факториал для целых чисел от 1 до 10. Результатпредставьте в виде словаря, ключами которого являются аргументы функции(числа от 1 до 10), а значениями – вычисленный факториал. Сформируйте словарьс помощью генератора словарей. Полученный словарь сохраните в файл в текстовом режиме доступа (форматданных придумайте сами). Затем, прочитайте содержимое этого файла ипоместите в другой словарь. Выведите на экран прочитанные данные (словарь).

29.	Задание №1. Импортируйте в программу стандартный модуль randomи, используя функцию randint, сформируйте двумерный список, размером 5x5элементов, со случайными значениями в диапазоне [-5; 5]. Двумерный списокследует сформировать с помощью вложенных генераторов списков. Сохраните полученные данные в файл в бинарном режиме доступа. Затем, прочитайте из него данные и поместите в другой список. Выведите на экранполученный двумерный список.

30.	Задание №1. Импортируйте в программу стандартный модуль math и, используяфункцию sin, вычислите синус для значений от -π до π с шагом 0.1. Результатпредставьте в виде списка. Сформируйте список с помощью генератора списков. Полученный список сохраните в файл в бинарном режиме доступа. Затем, прочитайте содержимое этого файла и поместите в другой список. Выведите наэкран прочитанные данные (список)

31.	Задание №1. Импортируйте в программу стандартный модуль time, используяодноименную функцию time из этого модуля, определите время работыпрограммы, которая сохраняет в файл таблицу умножения для целых чисел от 1до 10 (каждое умножается от 1 до 10). Затем, открывает этот же файл на чтение иформирует из прочитанных данных двумерный кортеж в формате: ((2, 1, 2), (2, 2, 4), (2, 3, 6), …,) Выведите на экран кортеж и время работы программы.

